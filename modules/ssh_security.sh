#!/bin/bash

# SSH Security Module v1.0
# –ú–æ–¥—É–ª—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ SSH

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –º–æ–¥—É–ª—è
readonly SSH_CONFIG="/etc/ssh/sshd_config"
readonly SSH_SERVICE="sshd"
readonly AUTHORIZED_KEYS_DIR="/root/.ssh"
readonly DEFAULT_NEW_PORT=2222

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
if [[ -z "${SCRIPT_DIR:-}" ]]; then
    echo "ERROR: SSH Security Module –¥–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∏–∑ main.sh"
    exit 1
fi

# === –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò ===

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
backup_ssh_config() {
    local backup_file="${SSH_CONFIG}.backup.$(date +%Y%m%d_%H%M%S)"
    
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    if [[ ! -f "$SSH_CONFIG" ]]; then
        log_error "SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $SSH_CONFIG"
        return 1
    fi
    
    if cp "$SSH_CONFIG" "$backup_file"; then
        log_success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
        echo "$backup_file"
        return 0
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
validate_ssh_config() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    if sshd -t 2>/dev/null; then
        log_success "SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞"
        return 0
    else
        log_error "SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏"
        log_info "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–æ–∫:"
        sshd -t
        return 1
    fi
}

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSH —Å–µ—Ä–≤–∏—Å–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
restart_ssh_service() {
    log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSH —Å–ª—É–∂–±—ã..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
    if ! validate_ssh_config; then
        log_error "–ù–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º SSH –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        return 1
    fi
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–ª—É–∂–±—É
    if systemctl restart "$SSH_SERVICE"; then
        sleep 2  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
        
        if systemctl is-active "$SSH_SERVICE" &>/dev/null; then
            log_success "SSH —Å–ª—É–∂–±–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞"
            return 0
        else
            log_error "SSH —Å–ª—É–∂–±–∞ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
            return 1
        fi
    else
        log_error "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ SSH —Å–ª—É–∂–±—ã"
        return 1
    fi
}

# === –§–£–ù–ö–¶–ò–ò –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ===

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
modify_ssh_parameter() {
    local parameter="$1"
    local new_value="$2"
    local comment="${3:-}"
    
    log_debug "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ SSH: $parameter = $new_value"
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    local temp_file="/tmp/sshd_config.tmp"
    cp "$SSH_CONFIG" "$temp_file"
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –∞–∫—Ç–∏–≤–Ω—ã–µ)
    sed -i "/^#*$parameter /d" "$temp_file"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    if [[ -n "$comment" ]]; then
        echo "# $comment" >> "$temp_file"
    fi
    echo "$parameter $new_value" >> "$temp_file"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if sshd -t -f "$temp_file" 2>/dev/null; then
        mv "$temp_file" "$SSH_CONFIG"
        log_success "–ü–∞—Ä–∞–º–µ—Ç—Ä $parameter —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤: $new_value"
        return 0
    else
        rm -f "$temp_file"
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ $parameter"
        return 1
    fi
}

# === –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ===

# –°–º–µ–Ω–∞ SSH –ø–æ—Ä—Ç–∞
change_ssh_port() {
    log_info "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –ø–æ—Ä—Ç–∞..."
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ—Ä—Ç
    local current_port
    current_port=$(grep "^Port " "$SSH_CONFIG" 2>/dev/null | awk '{print $2}')
    if [[ -z "$current_port" ]]; then
        current_port="22"
    fi
    
    log_info "–¢–µ–∫—É—â–∏–π SSH –ø–æ—Ä—Ç: $current_port"
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –ø–æ—Ä—Ç
    local new_port
    while true; do
        echo
        read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π SSH –ø–æ—Ä—Ç [$DEFAULT_NEW_PORT]: " new_port
        new_port=${new_port:-$DEFAULT_NEW_PORT}
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞
        if [[ "$new_port" =~ ^[0-9]+$ ]] && [[ "$new_port" -ge 1024 ]] && [[ "$new_port" -le 65535 ]]; then
            if [[ "$new_port" != "$current_port" ]]; then
                break
            else
                log_warning "–ù–æ–≤—ã–π –ø–æ—Ä—Ç —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–∫—É—â–∏–º"
            fi
        else
            log_error "–ü–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 1024 –¥–æ 65535"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç
    if ss -tulpn | grep ":$new_port " &>/dev/null; then
        log_warning "–ü–æ—Ä—Ç $new_port —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º —Å–µ—Ä–≤–∏—Å–æ–º"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            return 1
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    local backup_file
    if ! backup_file=$(backup_ssh_config); then
        return 1
    fi
    
    # –ò–∑–º–µ–Ω—è–µ–º –ø–æ—Ä—Ç
    if modify_ssh_parameter "Port" "$new_port" "Custom SSH port for security"; then
        log_success "SSH –ø–æ—Ä—Ç –∏–∑–º–µ–Ω–µ–Ω —Å $current_port –Ω–∞ $new_port"
        
        # –í–∞–∂–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        log_warning "–í–ê–ñ–ù–û! –ù–µ –∑–∞–±—É–¥—å—Ç–µ:"
        echo "  1. –û—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç $new_port –≤ —Ñ–∞–π—Ä–≤–æ–ª–µ"
        echo "  2. –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ SSH"
        echo "  3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –ü–ï–†–ï–î –∑–∞–∫—Ä—ã—Ç–∏–µ–º —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏"
        echo
        
        return 0
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å SSH –ø–æ—Ä—Ç"
        return 1
    fi
}

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
disable_password_auth() {
    log_info "üîí –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ SSH..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    local current_setting
    current_setting=$(grep "^PasswordAuthentication" "$SSH_CONFIG" 2>/dev/null | awk '{print $2}')
    if [[ -z "$current_setting" ]]; then
        current_setting="yes"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
    fi
    
    log_info "–¢–µ–∫—É—â–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ PasswordAuthentication: $current_setting"
    
    if [[ "$current_setting" == "no" ]]; then
        log_info "–ü–∞—Ä–æ–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞"
        return 0
    fi
    
    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    log_warning "–í–ù–ò–ú–ê–ù–ò–ï! –ü–∞—Ä–æ–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞"
    log_info "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ SSH –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç!"
    echo
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        return 0
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    if ! backup_ssh_config >/dev/null; then
        return 1
    fi
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ø–∞—Ä–æ–ª—å–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if modify_ssh_parameter "PasswordAuthentication" "no" "Disable password authentication for security"; then
        log_success "–ü–∞—Ä–æ–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞"
        
        log_warning "–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û!"
        echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø –ø–æ SSH –∫–ª—é—á—É –ü–ï–†–ï–î –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º SSH"
        echo "  ‚Ä¢ –ù–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –¥–æ –ø—Ä–æ–≤–µ—Ä–∫–∏"
        echo "  ‚Ä¢ –ò–º–µ–π—Ç–µ –ø–ª–∞–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞"
        echo
        
        return 0
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–∞—Ä–æ–ª—å–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"
        return 1
    fi
}

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ root –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
disable_root_login() {
    log_info "üö´ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä—è–º–æ–≥–æ –≤—Ö–æ–¥–∞ –ø–æ–¥ root..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    local current_setting
    current_setting=$(grep "^PermitRootLogin" "$SSH_CONFIG" 2>/dev/null | awk '{print $2}')
    if [[ -z "$current_setting" ]]; then
        current_setting="yes"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
    fi
    
    log_info "–¢–µ–∫—É—â–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ PermitRootLogin: $current_setting"
    
    if [[ "$current_setting" == "no" ]]; then
        log_info "–í—Ö–æ–¥ –ø–æ–¥ root —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω"
        return 0
    fi
    
    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    log_warning "–í–ù–ò–ú–ê–ù–ò–ï! –ü—Ä—è–º–æ–π –≤—Ö–æ–¥ –ø–æ–¥ root –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω"
    log_info "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –µ—Å—Ç—å –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å sudo –ø—Ä–∞–≤–∞–º–∏!"
    echo
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ root –≤—Ö–æ–¥–∞? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "–û—Ç–∫–ª—é—á–µ–Ω–∏–µ root –≤—Ö–æ–¥–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ"
        return 0
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    if ! backup_ssh_config >/dev/null; then
        return 1
    fi
    
    # –û—Ç–∫–ª—é—á–∞–µ–º root –≤—Ö–æ–¥
    if modify_ssh_parameter "PermitRootLogin" "no" "Disable direct root login for security"; then
        log_success "–ü—Ä—è–º–æ–π –≤—Ö–æ–¥ –ø–æ–¥ root –æ—Ç–∫–ª—é—á–µ–Ω"
        
        log_warning "–í–ê–ñ–ù–û! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å:"
        echo "  ‚Ä¢ –î—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å sudo –ø—Ä–∞–≤–∞–º–∏"
        echo "  ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ–π—Ç–∏ –ø–æ–¥ —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        echo "  ‚Ä¢ –ü–ª–∞–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞"
        echo
        
        return 0
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å root –≤—Ö–æ–¥"
        return 1
    fi
}

# === –£–ü–†–ê–í–õ–ï–ù–ò–ï SSH –ö–õ–Æ–ß–ê–ú–ò ===

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–∞
generate_ssh_key() {
    log_info "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–∞..."
    
    local key_name="server_security_key"
    local key_path="${KEYS_DIR}/${key_name}"
    local key_comment="Generated by Server Security Toolkit $(date +%Y-%m-%d)"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–ª—é—á–µ–π
    mkdir -p "$KEYS_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∫–ª—é—á
    if [[ -f "${key_path}" ]]; then
        log_warning "–ö–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${key_path}"
        read -p "–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á? (y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            return 0
        fi
    fi
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á
    log_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è RSA –∫–ª—é—á–∞ 4096 –±–∏—Ç..."
    if ssh-keygen -t rsa -b 4096 -f "$key_path" -N "" -C "$key_comment"; then
        log_success "SSH –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:"
        echo "  –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: ${key_path}"
        echo "  –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á: ${key_path}.pub"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
        chmod 600 "$key_path"
        chmod 644 "${key_path}.pub"
        
        log_info "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞:"
        echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
        cat "${key_path}.pub"
        echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
        
        return 0
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å SSH –∫–ª—é—á"
        return 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSH –∫–ª—é—á–∞
install_ssh_key() {
    log_info "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSH –∫–ª—é—á–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
    
    # –û–ø—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    echo "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª—é—á–∞:"
    echo "1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á"
    echo "2. –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª—é—á"
    echo "3. –í–≤–µ—Å—Ç–∏ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤—Ä—É—á–Ω—É—é"
    echo "0. –û—Ç–º–µ–Ω–∞"
    echo
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [1-3, 0]: " -n 1 -r choice
    echo
    
    local public_key_content=""
    
    case $choice in
        1)
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á
            local generated_key="${KEYS_DIR}/server_security_key.pub"
            if [[ -f "$generated_key" ]]; then
                public_key_content=$(cat "$generated_key")
                log_info "–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á"
            else
                log_error "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –∫–ª—é—á."
                return 1
            fi
            ;;
        2)
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª—é—á
            read -p "–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞: " key_file
            if [[ -f "$key_file" ]]; then
                public_key_content=$(cat "$key_file")
                log_success "–ö–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑: $key_file"
            else
                log_error "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $key_file"
                return 1
            fi
            ;;
        3)
            # –í–≤–æ–¥–∏–º –∫–ª—é—á –≤—Ä—É—á–Ω—É—é
            echo "–í—Å—Ç–∞–≤—å—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å ssh-rsa, ssh-ed25519 –∏ —Ç.–¥.):"
            read -r public_key_content
            ;;
        0)
            log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª—é—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
            return 0
            ;;
        *)
            log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            return 1
            ;;
    esac
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞
    if [[ ! "$public_key_content" =~ ^ssh-[a-z0-9]+ ]]; then
        log_error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç SSH –∫–ª—é—á–∞"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é .ssh
    mkdir -p "$AUTHORIZED_KEYS_DIR"
    chmod 700 "$AUTHORIZED_KEYS_DIR"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –≤ authorized_keys
    local authorized_keys_file="${AUTHORIZED_KEYS_DIR}/authorized_keys"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –∫–ª—é—á
    if [[ -f "$authorized_keys_file" ]] && grep -Fq "$public_key_content" "$authorized_keys_file"; then
        log_info "–ö–ª—é—á —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ authorized_keys"
        return 0
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á
    echo "$public_key_content" >> "$authorized_keys_file"
    chmod 600 "$authorized_keys_file"
    
    log_success "SSH –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω –≤ authorized_keys"
    log_info "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –ø–æ SSH –∫–ª—é—á—É"
    
    return 0
}

# === –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ===

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
configure_additional_security() {
    log_info "üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ SSH..."
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    if ! backup_ssh_config >/dev/null; then
        return 1
    fi
    
    local changes_made=false
    
    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if modify_ssh_parameter "MaxAuthTries" "3" "Limit authentication attempts"; then
        changes_made=true
    fi
    
    # –¢–∞–π–º–∞—É—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if modify_ssh_parameter "ClientAliveInterval" "300" "Client timeout (5 minutes)"; then
        changes_made=true
    fi
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ—Å—Å–∏–π
    if modify_ssh_parameter "ClientAliveCountMax" "2" "Max inactive sessions"; then
        changes_made=true
    fi
    
    # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ X11 forwarding
    if modify_ssh_parameter "X11Forwarding" "no" "Disable X11 forwarding for security"; then
        changes_made=true
    fi
    
    # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ forwarding –¥–ª—è –∞–≥–µ–Ω—Ç–∞
    if modify_ssh_parameter "AllowAgentForwarding" "no" "Disable agent forwarding for security"; then
        changes_made=true
    fi
    
    if [[ "$changes_made" == true ]]; then
        log_success "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    else
        log_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    fi
}

# === –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ú–û–î–£–õ–Ø ===

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è SSH Security –º–æ–¥—É–ª—è
configure_ssh_security() {
    log_info "üîê –ó–∞–ø—É—Å–∫ –º–æ–¥—É–ª—è SSH Security..."
    echo
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
    if [[ $EUID -ne 0 ]]; then
        log_error "SSH Security –º–æ–¥—É–ª—å —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ root"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SSH
    if ! systemctl list-unit-files | grep -q "^$SSH_SERVICE"; then
        log_error "SSH —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ"
        return 1
    fi
    
    # –ú–µ–Ω—é –º–æ–¥—É–ª—è
    while true; do
        echo
        echo "=== SSH Security Configuration ==="
        echo "1. üîß –ò–∑–º–µ–Ω–∏—Ç—å SSH –ø–æ—Ä—Ç"
        echo "2. üîë –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å SSH –∫–ª—é—á–∏"
        echo "3. üì• –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SSH –∫–ª—é—á –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
        echo "4. üîí –û—Ç–∫–ª—é—á–∏—Ç—å –ø–∞—Ä–æ–ª—å–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é"
        echo "5. üö´ –û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä—è–º–æ–π –≤—Ö–æ–¥ –ø–æ–¥ root"
        echo "6. üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
        echo "7. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å SSH —Å–µ—Ä–≤–∏—Å"
        echo "8. ‚ÑπÔ∏è  –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH"
        echo "9. üöÄ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        echo "0. ‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        echo
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ [0-9]: " -n 1 -r choice
        echo
        echo
        
        case $choice in
            1) change_ssh_port ;;
            2) generate_ssh_key ;;
            3) install_ssh_key ;;
            4) disable_password_auth ;;
            5) disable_root_login ;;
            6) configure_additional_security ;;
            7) restart_ssh_service ;;
            8) show_current_ssh_config ;;
            9) full_ssh_security_setup ;;
            0) return 0 ;;
            *) log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä: '$choice'" ;;
        esac
        
        if [[ "$choice" != "0" ]]; then
            echo
            echo -e "${YELLOW}–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...${NC}"
            read -r
        fi
    done
}

# –ü–æ–∫–∞–∑ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ SSH
show_current_ssh_config() {
    log_info "üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH:"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    
    local port=$(grep "^Port" "$SSH_CONFIG" 2>/dev/null | awk '{print $2}' || echo "22 (default)")
    local password_auth=$(grep "^PasswordAuthentication" "$SSH_CONFIG" 2>/dev/null | awk '{print $2}' || echo "yes (default)")
    local root_login=$(grep "^PermitRootLogin" "$SSH_CONFIG" 2>/dev/null | awk '{print $2}' || echo "yes (default)")
    local max_auth=$(grep "^MaxAuthTries" "$SSH_CONFIG" 2>/dev/null | awk '{print $2}' || echo "6 (default)")
    
    echo "SSH Port: $port"
    echo "Password Authentication: $password_auth"
    echo "Root Login: $root_login"
    echo "Max Auth Tries: $max_auth"
    echo "SSH Service Status: $(systemctl is-active $SSH_SERVICE 2>/dev/null || echo "unknown")"
    
    if [[ -f "${AUTHORIZED_KEYS_DIR}/authorized_keys" ]]; then
        local key_count=$(grep -c "^ssh-" "${AUTHORIZED_KEYS_DIR}/authorized_keys" 2>/dev/null || echo "0")
        echo "Authorized Keys: $key_count –∫–ª—é—á–µ–π"
    else
        echo "Authorized Keys: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
}

# –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
full_ssh_security_setup() {
    log_info "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    
    log_warning "–≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:"
    echo "  1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–µ–π"
    echo "  2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª—é—á–µ–π –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
    echo "  3. –ò–∑–º–µ–Ω–µ–Ω–∏–µ SSH –ø–æ—Ä—Ç–∞"
    echo "  4. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
    echo "  5. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ root –≤—Ö–æ–¥–∞"
    echo "  6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    echo "  7. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSH —Å–µ—Ä–≤–∏—Å–∞"
    echo
    
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "–ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
        return 0
    fi
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ –ø–æ—Ä—è–¥–∫—É
    log_info "–®–∞–≥ 1/7: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSH –∫–ª—é—á–µ–π..."
    generate_ssh_key
    
    log_info "–®–∞–≥ 2/7: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSH –∫–ª—é—á–µ–π..."
    install_ssh_key
    
    log_info "–®–∞–≥ 3/7: –ò–∑–º–µ–Ω–µ–Ω–∏–µ SSH –ø–æ—Ä—Ç–∞..."
    change_ssh_port
    
    log_info "–®–∞–≥ 4/7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    configure_additional_security
    
    log_info "–®–∞–≥ 5/7: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
    disable_password_auth
    
    log_info "–®–∞–≥ 6/7: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ root –≤—Ö–æ–¥–∞..."
    disable_root_login
    
    log_info "–®–∞–≥ 7/7: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ SSH —Å–µ—Ä–≤–∏—Å–∞..."
    if restart_ssh_service; then
        echo
        log_success "üéâ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        
        echo
        log_warning "–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ï –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–Ø:"
        echo "  ‚úì –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SSH –¥–æ—Å—Ç—É–ø –≤ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏"
        echo "  ‚úì –ù–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –¥–æ –ø—Ä–æ–≤–µ—Ä–∫–∏"
        echo "  ‚úì –û–±–Ω–æ–≤–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç—ã SSH —Å –Ω–æ–≤—ã–º –ø–æ—Ä—Ç–æ–º"
        echo "  ‚úì –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª –¥–ª—è –Ω–æ–≤–æ–≥–æ SSH –ø–æ—Ä—Ç–∞"
        echo
    else
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ SSH. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é!"
    fi
}

log_success "SSH Security Module –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ"
