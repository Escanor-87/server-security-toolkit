#!/bin/bash

# System Hardening Module v1.0

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
update_system() {
    clear
    log_info "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
    echo
    
    read -p "–û–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        return 0
    fi
    
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤..."
    apt update
    
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π..."
    apt upgrade -y
    
    log_success "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ fail2ban
install_fail2ban() {
    clear
    log_info "üõ°Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ fail2ban"
    echo
    
    if command -v fail2ban-server &>/dev/null; then
        log_success "fail2ban —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
    
    read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å fail2ban? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        return 0
    fi
    
    log_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ fail2ban..."
    if apt install -y fail2ban; then
        log_info "–ó–∞–ø—É—Å–∫ fail2ban..."
        systemctl enable fail2ban
        systemctl start fail2ban
        log_success "fail2ban —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
    else
        log_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ fail2ban"
    fi
}

# –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è fail2ban (jail.local)
configure_fail2ban_basic() {
    clear
    log_info "üß© –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è fail2ban (sshd)"
    echo
    if ! command -v fail2ban-server &>/dev/null; then
        log_error "fail2ban –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É."
        return 1
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π SSH –ø–æ—Ä—Ç –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    local ssh_port
    ssh_port=$(grep "^Port" /etc/ssh/sshd_config 2>/dev/null | awk '{print $2}' || echo "ssh")
    if [[ "$ssh_port" != "22" ]] && [[ "$ssh_port" != "ssh" ]]; then
        ssh_port="ssh,$ssh_port"
    else
        ssh_port="ssh"
    fi
    
    local jail_conf="/etc/fail2ban/jail.local"
    if [[ ! -f "$jail_conf" ]]; then
        cat > "$jail_conf" <<EOF
[DEFAULT]
bantime = 1h
findtime = 10m
maxretry = 5

[sshd]
enabled = true
port = $ssh_port
logpath = %(sshd_log)s
backend = systemd
EOF
        log_success "–°–æ–∑–¥–∞–Ω $jail_conf —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
    else
        # –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º enabled=true –¥–ª—è sshd –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—Ç
        if grep -q "^\[sshd\]" "$jail_conf"; then
            sed -i '/^\[sshd\]/,/^\[/{s/^enabled.*/enabled = true/}' "$jail_conf"
            sed -i '/^\[sshd\]/,/^\[/{s/^port.*/port = '"$ssh_port"'/}' "$jail_conf"
        else
            cat >> "$jail_conf" <<EOF

[sshd]
enabled = true
port = $ssh_port
logpath = %(sshd_log)s
backend = systemd
EOF
        fi
        log_success "–û–±–Ω–æ–≤–ª–µ–Ω $jail_conf (sshd enabled, port: $ssh_port)"
    fi
    systemctl restart fail2ban || true
    sleep 1
    systemctl is-active --quiet fail2ban && log_success "fail2ban –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω" || log_warning "fail2ban –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
install_unattended_upgrades() {
    clear
    log_info "üõ†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ unattended-upgrades"
    echo
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –û–° –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    local os_id=""
    if [[ -f /etc/os-release ]]; then
        # shellcheck disable=SC1091
        source /etc/os-release
        os_id="$ID"
    fi
    
    if command -v unattended-upgrade &>/dev/null; then
        log_success "unattended-upgrades —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        if apt update && apt install -y unattended-upgrades apt-listchanges; then
            log_success "unattended-upgrades —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        else
            log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å unattended-upgrades"
            return 1
        fi
    fi

    log_info "–í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π..."
    dpkg-reconfigure -f noninteractive unattended-upgrades || true

    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    local auto_conf="/etc/apt/apt.conf.d/20auto-upgrades"
    cat > "$auto_conf" <<EOF
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Unattended-Upgrade "1";
APT::Periodic::Download-Upgradeable-Packages "1";
APT::Periodic::AutocleanInterval "7";
EOF
    log_success "–ù–∞—Å—Ç—Ä–æ–µ–Ω $auto_conf"

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Debian
    if [[ "$os_id" == "debian" ]]; then
        local unattended_conf="/etc/apt/apt.conf.d/50unattended-upgrades"
        if [[ -f "$unattended_conf" ]]; then
            # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ security –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã –¥–ª—è Debian
            if ! grep -q "Debian-Security" "$unattended_conf"; then
                log_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ security –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è Debian..."
                sed -i '/Unattended-Upgrade::Allowed-Origins {/a\\t"origin=Debian,codename=${distro_codename}-security";' "$unattended_conf"
            fi
        fi
    fi

    systemctl enable unattended-upgrades || true
    systemctl restart unattended-upgrades || true
    log_success "–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã"
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
show_security_status() {
    clear
    log_info "üìã –°—Ç–∞—Ç—É—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    
    echo "Last Update: $(stat -c %y /var/lib/apt/lists/ 2>/dev/null | head -1 | cut -d' ' -f1 || echo "unknown")"
    echo "fail2ban: $(systemctl is-active fail2ban 2>/dev/null || echo "not installed")"
    echo "Automatic Updates: $(systemctl is-enabled unattended-upgrades 2>/dev/null || echo "not configured")"
    echo "CrowdSec: $(systemctl is-active crowdsec 2>/dev/null || echo "not installed")"
    echo "CrowdSec Bouncer: $(systemctl is-active crowdsec-firewall-bouncer 2>/dev/null || echo "not installed")"
    
    if command -v fail2ban-client &>/dev/null; then
        echo
        echo "fail2ban jails:"
        fail2ban-client status 2>/dev/null || echo "fail2ban –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é System Hardening –º–æ–¥—É–ª—è
system_hardening() {
    while true; do
        clear
        echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
        echo -e "${BLUE}‚ïë       System Hardening Menu          ‚ïë${NC}"
        echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
        echo
        echo "1. üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É"
        echo "2. üõ°Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å fail2ban"
        echo "3. üß© –ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è fail2ban (sshd)"
        echo "4. ‚öôÔ∏è  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –≤–∫–ª—é—á–∏—Ç—å unattended-upgrades"
        echo "5. üß± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å CrowdSec"
        echo "6. üö™ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å CrowdSec Firewall Bouncer (iptables)"
        echo "7. üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        echo "0. ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        echo
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ [0-7]: " -n 1 -r choice
        echo
        
        case $choice in
            1) update_system ;;
            2) install_fail2ban ;;
            3) configure_fail2ban_basic ;;
            4) install_unattended_upgrades ;;
            5) install_crowdsec ;;
            6) install_crowdsec_bouncer ;;
            7) show_security_status ;;
            0) return 0 ;;
            *) 
                log_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
                sleep 1
                ;;
        esac
        
        if [[ "$choice" != "0" ]]; then
            echo
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..." -r
        fi
    done
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ CrowdSec
install_crowdsec() {
    clear
    log_info "üß± –£—Å—Ç–∞–Ω–æ–≤–∫–∞ CrowdSec"
    echo
    if systemctl is-active --quiet crowdsec 2>/dev/null; then
        log_success "CrowdSec —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
        return 0
    fi
    if apt update && apt install -y crowdsec; then
        systemctl enable crowdsec || true
        systemctl start crowdsec || true
        systemctl is-active --quiet crowdsec && log_success "CrowdSec —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω" || log_warning "CrowdSec —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å CrowdSec. –í–æ–∑–º–æ–∂–Ω–æ, –ø–∞–∫–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö."
        log_info "–°–º. –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: https://docs.crowdsec.net/docs/getting_started/install/"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ CrowdSec Firewall Bouncer (iptables)
install_crowdsec_bouncer() {
    clear
    log_info "üö™ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ CrowdSec Firewall Bouncer (iptables)"
    echo
    if systemctl is-active --quiet crowdsec-firewall-bouncer 2>/dev/null; then
        log_success "Firewall Bouncer —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
        return 0
    fi
    if apt update && apt install -y crowdsec-firewall-bouncer-iptables; then
        systemctl enable crowdsec-firewall-bouncer || true
        systemctl start crowdsec-firewall-bouncer || true
        systemctl is-active --quiet crowdsec-firewall-bouncer && log_success "Bouncer —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω" || log_warning "Bouncer —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    else
        log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Firewall Bouncer."
        log_info "–ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è nftables, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç crowdsec-firewall-bouncer-nftables"
    fi
}
